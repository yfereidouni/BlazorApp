@page "/ShoppingList"
@*@layout ShoppingListLayout*@
@using BlazorApp.Data

<PageTitle>@title</PageTitle>
<h3>Shopping List</h3>

@*<input class="form-control mb-2" placeholder="Grocery Name" @bind="@groceryName" />
    <input class="form-control mb-2" placeholder="Grocery Price" @bind="groceryPrice" />
    <button class="btn btn-outline-primary mb-2" @onclick="AddGrocery">Add Grocery</button>
    <button class="btn btn-outline-danger mb-2" @onclick="RemoveGrocery">Remove Grocery</button>*@

<EditForm Model="grocery" OnSubmit="AddGrocery" class="w-100">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <p>
        <label>Name:</label>
        <InputText @bind-Value="grocery.Name" class="form-control" />
    </p>
    <p>
        <label>Price:</label>
        <InputNumber @bind-Value="grocery.Price" class="form-control" />
    </p>
    <button class="btn btn-outline-primary" type="submit">Add Grocery</button>
</EditForm>

<hr />
<table class="table table-sm">

    <tr>
        <th>Name</th>
        <th>Price</th>
        <th></th>
    </tr>

    @foreach (var grocery in Groceries)
    {
        <Item GroceryItem="@grocery" OnGroceryPriceIncreased="@OnGroceryPriceIncreased" />
        @*<li>@grocery.Name --- @grocery.Price</li>*@
    }

</table>

@*<h1>Total (@Groceries.Sum(c=>c.Price))</h1>*@
<h1>Total (@sum)</h1>

@code {
    private float sum = 0;
    private string title = "Our Groceries";
    private string groceryName = string.Empty;
    private float groceryPrice = 0;
    private Grocery grocery = new();
    private List<Grocery> Groceries = new List<Grocery>();
    public void AddGrocery()
    {
        Groceries.Add(grocery);
        grocery = new();
        //if (!string.IsNullOrWhiteSpace(groceryName) && groceryPrice > 0)
        //{
        //    Groceries.Add(new Grocery
        //        {
        //            Name = groceryName,
        //            Price = groceryPrice
        //        });
        //    sum += groceryPrice;
        //    groceryName = string.Empty;
        //    groceryPrice = 0;
        //}
        UpdateTotalAmount();
    }

    public void RemoveGrocery()
    {
        var groceryItem = Groceries.Where(c => c.Name == groceryName).FirstOrDefault();
        if (groceryItem != null)
        {
            Groceries.Remove(groceryItem);
        }
        sum -= groceryItem.Price;
        groceryName = string.Empty;
        groceryPrice = 0;
        UpdateTotalAmount();
    }

    public void UpdateTotalAmount()
    {
        sum = Groceries.Sum(x => x.Price);
    }

    public void OnGroceryPriceIncreased()
    {
        UpdateTotalAmount();
    }
}
